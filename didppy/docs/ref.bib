@inproceedings{DIDPFirst,
  author    = {Ryo Kuroiwa and J. Christopher Beck},
  title     = {Domain-Independent Dynamic Programming: Generic State Space Search for Combinatorial Optimization},
  booktitle = {Proceedings of the 33rd International Conference on Automated Planning and Scheduling (ICAPS)},
  year      = {2023}
}

@inproceedings{DIDPAnytime,
  author    = {Ryo Kuroiwa and J. Christopher Beck},
  title     = {Solving Domain-Independent Dynamic Programming Problems with Anytime Heuristic Search},
  booktitle = {Proceedings of the 33rd International Conference on Automated Planning and Scheduling (ICAPS)},
  year      = {2023}
}

@article{Dumas1995,
  author  = {Yvan Dumas and Jacques Desrosiers and Eric Gelinas and Marius M Solomon},
  doi     = {10.1287/opre.43.2.367},
  number  = {2},
  journal = {Operations Research},
  title   = {An Optimal Algorithm for the Traveling Salesman Problem with Time Windows},
  volume  = {43},
  pages   = {367--371},
  year    = {1995}
}

@article{GarciaDeLaBanda2011,
  abstract = {We give a dynamic programming solution to the problem of scheduling scenes to minimize the cost of the talent. Starting from a basic dynamic program, we show a number of ways to improve the dynamic programming solution by preprocessing and restricting the search. We show how by considering a bounded version of the problem, and determining lower and upper bounds, we can improve the search. We then show how ordering the scenes from both ends can drastically reduce the search space. The final dynamic programming solution is orders of magnitude faster than competing approaches and finds optimal solutions to larger problems than were considered previously. Â© 2011 INFORMS.},
  author   = {Maria {Garcia de la Banda} and Peter J. Stuckey and Geoffrey Chu},
  doi      = {10.1287/ijoc.1090.0378},
  issn     = {10919856},
  number   = {1},
  journal  = {INFORMS Journal on Computing},
  keywords = {Dynamic programming,Optimization,Scheduling},
  pages    = {120-137},
  title    = {Solving Talent Scheduling with Dynamic Programming},
  volume   = {23},
  year     = {2011}
}

@inproceedings{Chu2009,
  author    = {Chu, Geoffrey
               and Stuckey, Peter J.},
  editor    = {Gent, Ian P.},
  title     = {Minimizing the Maximum Number of Open Stacks by Customer Search},
  booktitle = {Principles and Practice of Constraint Programming - CP 2009},
  year      = {2009},
  pages     = {242--257},
  abstract  = {We describe a new exact solver for the minimization of open stacks problem (MOSP). By combining nogood recording with a branch and bound strategy based on choosing which customer stack to close next, our solver is able to solve hard instances of MOSP some 5-6 orders of magnitude faster than the previous state of the art. We also derive several pruning schemes based on dominance relations which provide another 1-2 orders of magnitude improvement. One of these pruning schemes largely subsumes the effect of the nogood recording. This allows us to reduce the memory usage from an potentially exponential amount to a constant {\textasciitilde}2Mb for even the largest solvable instances. We also show how relaxation techniques can be used to speed up the proof of optimality by up to another 3-4 orders of magnitude on the hardest instances.}
}
